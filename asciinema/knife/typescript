Script started on Tue Jun 17 21:42:37 2014
$ # This screencast demonstrates how you can us eChef and the knife-google
$ # plugin for Google Compute Engine. Everythin  ing you need to repeat this demo
$ # on your own cab   n be found at,
$ # https://github.com/GoogleCloudPlatform/compute-video-demo-chef
$ 
$ # We assume you have already set up your Google Cloud Platform project,
$ # installed the Open Source Chef Server, created and configured a Chef
$ # Workstation  , and have configured the knife utilii ty.
$ # Le'ts   et'   t's just check to make sure we're starting with a clean slate,
$ knife node list

$ # Ok, let's get started! First  , we want to make sure our Chef Workstation
$ # running in Compute Engine has a valid SSH key and i the key is regsistered
$ # with the metatadata server. Thsi wil      is will give us sudo access on new instances.
$ # We can use 'gcloud compute' for this,
$ gcloud compute ssh $(hostname -s)
[1;33mWARNING:[0m You do not have an SSH key for Google Compute Engine.
[1;33mWARNING:[0m ssh-keygen will be executed to generate a key.
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/erjohnso/.ssh/google_compute_engine.
Your public key has been saved in /home/erjohnso/.ssh/google_compute_engine.pub.
The key fingerprint is:
bd:5b:e8:20:72:36:2e:87:09:ca:53:32:2c:c9:39:c0 erjohnso@chef-workstation-io
The key's randomart image is:
+--[ RSA 2048]----+
|                 |
|                 |
|.                |
|.E       .       |
|+..     S .      |
|oB..       o     |
|o.=..o= . o .    |
|.o  +=.o o o     |
|  .  o.   o      |
+-----------------+
[1;31mERROR:[0m (gcloud.compute.ssh) could not resolve zone for some resources; try specifying --zone
$ 
$ # I'ts     t's OK that this failed on a zone lookup. The key was still created and
$ # uploaded.
$ # Now we'll install the knife-google ui tility,
$ sudo /opt/chef/embedded/bin/gem install knife-google --no-rdoc --no-ri
Successfully installed knife-google-1.3.1
1 gem installed
$ 
$ # Now we need to set up authorization. You will need to have      have a valid c Client
$ # ID (for native application) so you can provide the *Client ID* and *Client
$ # secret*. Once you supply the necessary bits, you will need to copy/paste
$ # the autogenerated URL into an authenticated browser session an   , click
$ # Accpet, and cut/paste the authorization token into your terminal,
$ knife google setup
Enter Project ID (ex: my-gce-project): graphite-demos
Enter Client ID (ex: 123abc4.apps.googleusercontent.com): 982735739546-5i27litci121ifgovcbv7loc32tfss2k.apps.googleusercontent.com
Enter Client secret: FXoOifaMPa7KfATGAu_pK8L8
Copy and paste the following url in your brower and allow access. Enter the resulting authorization code below.

https://accounts.google.com/o/oauth2/auth?access_type=offline&client_id=982735739546-5i27litci121ifgovcbv7loc32tfss2k.apps.googleusercontent.com&redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=code&scope=https://www.googleapis.com/auth/compute%20https://www.googleapis.com/auth/compute.readonly%20https://www.googleapis.com/auth/devstorage.full_control%20https://www.googleapis.com/auth/devstorage.read_only%20https://www.googleapis.com/auth/devstorage.read_write%20https://www.googleapis.com/auth/devstorage.write_only%20https://www.googleapis.com/auth/userinfo.email


Authorization code: 4/MKVSNeLTdu1LQosp5SuC0vbwmj2P.cmFrW6ulkpYdmmS0T3UFEsMUMJ1XjQI
$ 
$ # We can verify that thsi w     is  his works with,
$ knife zone list         google zone list
[1mname[0m            [1mstatus[0m  [1mdeprecation[0m  [1mmaintainance window[0m                                   
asia-east1-b    [32mup[0m      -            -                                                     
asia-east1-a    [32mup[0m      -            -                                                     
europe-west1-b  [32mup[0m      -            -                                                     
europe-west1-a  [32mup[0m      -            [32m2014-08-01 19:00:00 +0000 to 2014-08-15 19:00:00 +0000[0m
us-central1-b   [32mup[0m      -            -                                                     
us-central1-a   [32mup[0m      -            -                                                     
$ # Great! Now let's create a ser     new instance and boot st   strap it,
$ knife google server create knife-testing -m n1-standard-1 -Z us-central1-b \
> -I deiba   bian-7-wheezy-v20140606 -i ~/.ss  ssh/google_compute_engine -x $USER
Looking for Image 'debian-7-wheezy-v20140606' in Project 'graphite-demos'
Looking for Image 'debian-7-wheezy-v20140606' in Project 'debian-cloud'
Found Image 'debian-7-wheezy-v20140606' in Project 'debian-cloud'
Waiting for the disk insert operation to complete
.
.
Waiting for the create server operation to complete
.
.
.
.
.
Waiting for the servers to be in running state
[36mInstance Name[0m: knife-testing
[36mMachine Type[0m: n1-standard-1
[36mImage[0m: debian-7-wheezy-v20140606
[36mZone[0m: us-central1-b
[36mTags[0m: None
[36mPublic IP Address[0m: ["173.255.114.41"]
[36mPrivate IP Address[0m: ["10.240.11.144"]

[35mWaiting for server[0m

[35mWaiting for sshd[0m
...done
Connecting to [1m173.255.114.41[0m
[36m173.255.114.41[0m Installing Chef Client...
[36m173.255.114.41[0m --2014-06-17 21:50:22--  https://www.opscode.com/chef/install.sh
[36m173.255.114.41[0m Resolving www.opscode.com (www.opscode.com)... 184.106.28.91
[36m173.255.114.41[0m Connecting to www.opscode.com (www.opscode.com)|184.106.28.91|:443... connected.
[36m173.255.114.41[0m HTTP request sent, awaiting response... 200 OK
[36m173.255.114.41[0m Length: 15934 (16K) [application/x-sh]
[36m173.255.114.41[0m Saving to: `STDOUT'
[36m173.255.114.41[0m 
[36m173.255.114.41[0m  0% [                                       ] 0           --.-K/s              100%[======================================>] 15,934      --.-K/s   in 0.001s  
[36m173.255.114.41[0m 
[36m173.255.114.41[0m 2014-06-17 21:50:26 (17.6 MB/s) - written to stdout [15934/15934]
[36m173.255.114.41[0m 
[36m173.255.114.41[0m Downloading Chef 11.12.8 for debian...
[36m173.255.114.41[0m downloading https://www.opscode.com/chef/metadata?v=11.12.8&prerelease=false&nightlies=false&p=debian&pv=6&m=x86_64
[36m173.255.114.41[0m   to file /tmp/install.sh.2156/metadata.txt
[36m173.255.114.41[0m trying wget...
[36m173.255.114.41[0m url	https://opscode-omnibus-packages.s3.amazonaws.com/debian/6/x86_64/chef_11.12.8-2_amd64.deb
[36m173.255.114.41[0m md5	7da696bbaad23ea00cd1f4f8394b7596
[36m173.255.114.41[0m sha256	0c05369ba0e123099a428e5d16aa8cbbbfdb5834de8af9932bdbe08afa7144ae
[36m173.255.114.41[0m downloaded metadata file looks valid...
[36m173.255.114.41[0m downloading https://opscode-omnibus-packages.s3.amazonaws.com/debian/6/x86_64/chef_11.12.8-2_amd64.deb
[36m173.255.114.41[0m   to file /tmp/install.sh.2156/chef_11.12.8-2_amd64.deb
[36m173.255.114.41[0m trying wget...
[36m173.255.114.41[0m Comparing checksum with sha256sum...
[36m173.255.114.41[0m Installing Chef 11.12.8
[36m173.255.114.41[0m installing with dpkg...
[36m173.255.114.41[0m Selecting previously unselected package chef.
[36m173.255.114.41[0m (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 15827 files and directories currently installed.)
[36m173.255.114.41[0m Unpacking chef (from .../chef_11.12.8-2_amd64.deb) ...
[36m173.255.114.41[0m Setting up chef (11.12.8-2) ...
[36m173.255.114.41[0m Thank you for installing Chef!
[36m173.255.114.41[0m Starting first Chef Client run...
[36m173.255.114.41[0m [2014-06-17T21:50:44+00:00] WARN: 
[36m173.255.114.41[0m * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
[36m173.255.114.41[0m SSL validation of HTTPS requests is disabled. HTTPS connections are still
[36m173.255.114.41[0m encrypted, but chef is not able to detect forged replies or man in the middle
[36m173.255.114.41[0m attacks.
[36m173.255.114.41[0m 
[36m173.255.114.41[0m To fix this issue add an entry like this to your configuration file:
[36m173.255.114.41[0m 
[36m173.255.114.41[0m ```
[36m173.255.114.41[0m   # Verify all HTTPS connections (recommended)
[36m173.255.114.41[0m   ssl_verify_mode :verify_peer
[36m173.255.114.41[0m 
[36m173.255.114.41[0m   # OR, Verify only connections to chef-server
[36m173.255.114.41[0m   verify_api_cert true
[36m173.255.114.41[0m ```
[36m173.255.114.41[0m 
[36m173.255.114.41[0m To check your SSL configuration, or troubleshoot errors, you can use the
[36m173.255.114.41[0m `knife ssl check` command like so:
[36m173.255.114.41[0m 
[36m173.255.114.41[0m ```
[36m173.255.114.41[0m   knife ssl check -c /etc/chef/client.rb
[36m173.255.114.41[0m ```
[36m173.255.114.41[0m 
[36m173.255.114.41[0m * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
[36m173.255.114.41[0m 
[36m173.255.114.41[0m Starting Chef Client, version 11.12.8[0m
[36m173.255.114.41[0m [2014-06-17T21:50:46+00:00] WARN: [inet] no ipaddress/mask on eth0 matching the gateway 10.240.0.1, picking one anyway
[36m173.255.114.41[0m Creating a new client identity for knife-testing using the validator key.[0m
[36m173.255.114.41[0m resolving cookbooks for run list: [][0m
[36m173.255.114.41[0m Synchronizing Cookbooks:[0m
[36m173.255.114.41[0m Compiling Cookbooks...[0m
[36m173.255.114.41[0m [2014-06-17T21:50:47+00:00] WARN: Node knife-testing has an empty run list.
[36m173.255.114.41[0m Converging 0 resources[0m
[36m173.255.114.41[0m 
[36m173.255.114.41[0m Running handlers:[0m
[36m173.255.114.41[0m Running handlers complete
[36m173.255.114.41[0m [0m
[36m173.255.114.41[0m Chef Client finished, 0/0 resources updated in 3.125064268 seconds[0m

Complete!!
$ 
$ # Ok, let's see if it checked in with the Cher f SErver     erver,
$ knife node list
knife-testing
$ 
$ # Ohai even has custom hints for Compute Engine that it pulls from the
$ # Compute Engine metadata server,
$ knife node show knife-testing -a gce | less
[?1049h[?1h=knife-testing:
  gce:
    instance:
      attributes:
      description:       
      disks:
        deviceName: knife-testing
        index:      0
        mode:       READ_WRITE
        type:       PERSISTENT
      hostname:          knife-testing.c.graphite-demos.internal
      id:                462445137488051348
      image:             
      machineType:       projects/982735739546/machineTypes/n1-standard-1
      maintenanceEvent:  NONE
      networkInterfaces:
        accessConfigs:
          externalIp: 173.255.114.41
          type:       ONE_TO_ONE_NAT
        forwardedIps:
        ip:            10.240.11.144
        network:       projects/982735739546/networks/default
      scheduling:
:[K[K        automaticRestart:  TRUE
        onHostMaintenance: MIGRATE
      serviceAccounts:
      tags:
      zone:              projects/982735739546/zones/us-central1-b
    project:
      attributes:
        sshKeys: erjohnso:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDto3qsBB0JSecLz qI86hsJQzcPlIK5LpTYBjA0Xr+8JYCgFDvB9P0vdB9BEomB/sll4vdTLduPSKSHl0nurbRRdmSC9kbn+ jy4ubiZTKH2O1REE7ndV8SPLTNzlGoZ47FZE0yqeSZjHcokO/xbX8c4IiFVBiMPfpnHWtdACBpHtuQZH Y5MeAeQ22UVcvFa3J6y9H5c0BYgUkCUZg+2rmH117xmddijWEYqrL5yrc7Ozx9AoGFovL5DH2ElmtbJF seIXk60OscEPldyvv5qZIK0/CwLoTnmE/iN9yNocOxbPZ8qzhalzbqu9Vbo2KROs3H1c+iV84dirlEb7 hA460l erjohnso@edjy.dls.corp.google.com
        erjohnso:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsgJYeiunlPh9Y9YdP/NKwXEA ucYpP66Z+mAyGYMxr8YhETaBLZJbHqC+Ii5Qlfm6Fbsjt9bDfJCWcO90n48LpVz63/o9oxfCxVlfV0c5 ddXlfRX3JlL5XAYHPfnnuawxt+/clYucAIiy8FEar5D3sRXdfLNc7vcXW6PbyoW6Rkud8JXVg768j8bi LwN3L+o5iXNff6nIIgVALgRdlU0VqfwMJ4OPc2OwKWyEZAmr4JWeisVhIHEhyMtj9ScWhAPsj7I3z6gJ ETTTUy/fE3XrpthaGSuDCXoZLDuod1D4ScjX8yRB/LV1MQoa1jdayyX4ZAAOha+Cz+P/O8VO2SNFl er johnso@mbpro
        root:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCZN1NbRfib5qJnhLbxUCvbiKKGXxg /pWuBNog4rE8hY5PINkVOP0Tb+WVfI9dMXIWrUY4JLRgCytFNKf5xhsUxds+W+X/oaksF/T+RxzWWPQw r+KJtDL7c3Cvc3KaE1GItboDOI68TpJivGekzY0ZIGBIRbYSUb3ZDnW3hLss/e57mHQNXMy9CN4rzc/j dcClqeqwXL+btmL8D1vVTZFew5ediOJ5+ilsRNKr6qy/8lCwLhMWjVsa3EvAps6Ie70FlegN7Uh79TxF :[K[KlrNtfXyYTrntggTBHfsMe1T2Dd2k/1a3xcliQmlNR/eEwNiEBjpekcS3VeHv0WYRaNSn6AfZR root@s alt
        erjohnso:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC1rFWVN0WD0YbovOUQrq4xypA D015cuX7k1ZCEKNzXEvwfPyppKKJHckQPMEmscLgLOuJx1BFg/ly67cct9LOtKuFoWNtE1aJGr9yGYdL x21AtAIo+HfoyyuOT/lNn2mQ7EXFWXx5WtcQDqN4e1qzctlMyjagelMaT50zv6Os5bPXY5nJb1eK5YOY J2/KZiZ4WyymVRNRgCMBYM+Cf7fNmNr+vbo/4Q7nkxx64rqFm+QCc8dWtpuvVdaTG7zZESbnP3WgeFUq qT5IUDNd56EzLIYkmhzXZ8EyqtJoISyhp0mEaXRPsFjTMq4CKfc/HsFnomLA/2IC6N8w1zV9o5m3F er johnso@salt
        erjohnso:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC1vLjQOlDcRG3BUX1g69zw2Rf 5Oqi/td6xLODhpBUpjKc9IgU9fbUfvHMY/K6GJb4gc2thJeH5UEjZ0rTbhVkPVgQfPIX4TrLxnO6Wpne XKD2bUwNL/ljK9o/EQ+QQAzxV0IxtuXdcpukBH/x8fOVJxkEkCzrCdXghjsyNkh+ioBLsiDAGoUHxr+K 0L/B1xlIp2alDKZN1va7y0uqJkMvQuSYE+4ZyMkKmqli3IkioUVGOlV7dcHY24Rb77uzE3DMJ0DQ2nsm deApkBT5IVqia48VQnSbmywzuXTQUJuU6eww3qr927PdM7S3rAz7BzYa6DmNmdYhNTPBDc86rl6ap er johnso@chef-workstation
        erjohnso:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQz7kGDn8U3tqUoP0UI41h0LT 75EKoO91BhWnrbQLs28q8v8MaKbPPHP/aS6QdHZzhbMhy2pPWxqoqLPjSFOfSjSihxPkGB/U521GJsvy 9Xir4QQzEz8rx9vd4LfQEGyKXTfSw/P42J2H8oE+FpRyak2uwZ+oFqwZBoCIWRxIuJR7EUrCTGqXpUOp ceEh8AzGN/FYM/Li7zIrW7uRJhyKCty2M4I1Wqg/c+8Xots2i51EDNFSYRjdrnimf1kGJyYNLmavIaIx O7Gawxww778FmhOgstRXEkiq5i4NmZPnt9iPqsoSU9ZudYYfb3PL54X6dI/DqeQDLveuiaGxErjGd er johnso@erjohnso-macbookair.roam.corp.google.com
        kprobst:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+jHR3w+0U3Jc5L78OTX0C7W9Q HkDma04dYiOCPaQiS9YBT8mn/sMnddnZq0E86bws5aqYWizUBSt7mt5zra5ZvVN//3lHsjsfAGn4nMu7 mkvtx5yKVB/Gyyibhw7a9JKu1gOyBycbxo9JpKXqMDIJXF6HuatBTX6xpsGUP7SufzX1MiaTKwt5XtWW :[K[K0vFe3NjhlhA+xU7j4PGfgJxP/hl0+fWLbcA7CqnQiAu5XJmUCngGQ+nEQTBlNdqtvLOuEEu4isavNoEA hoA5DDaUt29i6xZMtYP7suBwr7s/rbOtT9QBvf4oMTXqH1Zz+Yi1VX9EwZENYJp4ZRlTGM6ZLvP9 kpr obst@dhcp-172-19-39-30.mtv.corp.google.com
        erjohnso:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCwYEG87HRffzh+oiCkYyyN0t2 z4Y3Bv6/q1RmzoYQRApj72+FEmJOjoXNEHtf6V6kFWNq7uOnFHHzQslBpOAnk5XGgvw7mvMFv/pf7i+p NadCvD7ZIHnoAvxvAUUj0oIm0mC0A4NhETrnYD6VJgTRnZ/U+iIPqnwTYu4MAMdWlJ54wEmIV5wXclA8 7pbQOYfWwJZNyv56C/1dH3STIZKuB70koyMTUXU4lewHIqhD7y1BDi41Xpvk5uDGcVcljJyYEDmQGOwN ylEGrE78S6+uFdRttERWVZvdMQUPsEUpipeWZ67vWuSNk6CFfv3hfizfxd8OxY+GYGny3xG0f0LZN er johnso@chef-workstation-io
        erjohnso:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+v/EOmW48OpZV5YnnXmYc12E b5PzPYZ4ATQXdsgSQzBmQR4zMXi5kWj4BPkOWKfyUTde7ff453UZLtOff9haNFf0O4a8JJXL8afDdmfE LLme/4C0Y8jSpbOI4j9sta8hTAVb/dKOueVxxPqqnHhw8fm2JOd/m77bB8CwVd/QbLr01AvTM515sALr 87yt4XBWvTEI8UURE0IySeCoiq7mhWD6bKgreCQVGWgRq2Hslwx+3MICv8/f1rSIi5FuATWCoTQYUHES ccg0GX/VNBqK2Ie/2eRC+Jd5EE1BMhX5f3zsNbeIbXGyvGhp9h+29pGvHZqSnMk0vMw6H3gNX8/fv er johnso@chef-workstation-io
        erjohnso:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqydrgpk/RmrRyDcScR6tprZT BHw98EQLIjkN5zenru86i3e1TIi6pVy14YXOZQRhojEd3s9n+hqFhhuvVLnyL9Mc/BNaAcJ7nUbDqx2E XdybwDkSAmfhsG/i+4YokEGztjx/iz1xPG2YLYpOY+Y/1mHTjy3kp7n+yE6LMjzRIJFWmFNKyjTB6FjR K6lgEOEnYmyXL9q7GFJQTXDaikbriUWWBKL6m1twOh1Kt4Xmu99H8LGuppX3cvlD5IpAUoAwswU9WlFR LFiKDOVdtc5GpNqM+8bOoFt+PIovBuPIZRSkI4bFBn+daScKW+sW2tVp9lDQEPbRDIA2VKWi1m1ux er johnso@chef-workstation-io
        erjohnso:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCypvYSmUiSptP7ouPC0eSB3Ip yX1ODxBWdLDFz5olmXWIN4OR5p04eJ/6RJloig5EKvB13cvyBvM9YN6iJb8Cesxq/nVBs8cKaJYoOR0j :[K[KeH4//giYOrnR2blnyCrHDTUwJ5GJwMgw1a/Mq/7tAlaKJYiWR14aOlrdXBGzOEKLqFjdgldhs/R2tJX/ /UCobCTibBotec9vniNTSWUYfLxZOqik/QMs7qpcbTzMX1lcRmPaibXJBqDhXurrbITlTLY92wpffUnE 7ZVll1gNRQtQNb4RmGC3pu99WHSFX3pMxiFyC0vEJnHdAMlXJ46z0/nUvqxEWdsT7ncBzyAABo+VH er johnso@chef-workstation-io
      numericProjectId: 982735739546
      projectId:        graphite-demos
[7m(END)[27m[K[K[K[7m(END)[27m[K[K[K[7m(END)[27m[K[K[?1l>[?1049l$ 
$ # th  That's tif   it for the demo!
$ exit
exit

Script done on Tue Jun 17 21:52:01 2014
